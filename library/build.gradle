apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

group = 'com.github.indielabs'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 7
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:2.0.40-beta"
    androidTestCompile "com.android.support:support-annotations:$project.ext.SUPPORT_LIBRARY"
    androidTestCompile "com.android.support.test:runner:$project.ext.ANDROID_TEST_SUPPORT_LIBRARY"
    androidTestCompile "com.android.support.test:rules:$project.ext.ANDROID_TEST_SUPPORT_LIBRARY"
    androidTestCompile "org.hamcrest:hamcrest-library:$project.ext.HAMCREST_LIBRARY"
}

// Publish sources and javadoc
// https://github.com/jitpack/android-example/blob/master/library/build.gradle
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}